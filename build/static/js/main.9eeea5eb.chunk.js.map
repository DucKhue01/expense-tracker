{"version":3,"sources":["context/AppReducer.js","context/GlobalState.js","components/Balance.js","components/TransactionItem.js","components/History.js","components/AddTransaction.js","components/Detail.js","App.js","index.js"],"names":["state","action","type","transactions","filter","tran","id","payload","initialState","text","amount","GlobalContext","createContext","GlobalProvide","children","useReducer","AppReducer","dispatch","Provider","value","remove","add","data","Balance","useContext","useState","sum","setSum","useEffect","reduce","acc","curr","className","TransactionItem","name","onClick","class","History","listItem","setListItem","map","key","AddTransaction","info","setInfo","onSubmit","e","preventDefault","length","Math","floor","random","alert","for","placeholder","onChange","target","parseInt","disabled","Detail","sumPos","setSumPos","sumNeg","setSumNeg","toFixed","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"iPAAgB,WAACA,EAAOC,GAKpB,OAAQA,EAAOC,MACX,IAAK,SACD,OAAO,2BACAF,GADP,IAEIG,aAAcH,EAAMG,aAAaC,QAAQ,SAACC,GACtC,OAAOA,EAAKC,KAAOL,EAAOM,aAItC,IAAK,MACD,OAAO,2BACAP,GADP,IAEIG,aAAa,GAAD,mBACLH,EAAMG,cADD,CAERF,EAAOM,YAMnB,QACI,OAAOP,ICvBbQ,EAAe,CACjBL,aAAe,CACX,CAAEG,GAAI,EAAGG,KAAM,SAAUC,QAAS,IAClC,CAAEJ,GAAI,EAAGG,KAAM,SAAUC,OAAQ,KACjC,CAAEJ,GAAI,EAAGG,KAAM,OAAQC,QAAS,IAChC,CAAEJ,GAAI,EAAGG,KAAM,SAAUC,OAAQ,OAK5BC,EAAgBC,0BAEhBC,EAAgB,SAAC,GAAgB,IAAfC,EAAc,EAAdA,SAAc,EACfC,qBAAWC,EAAYR,GADR,mBAClCR,EADkC,KAC3BiB,EAD2B,KAkBzC,OACI,kBAACN,EAAcO,SAAf,CAAwBC,MAAO,CAC3BhB,aAAcH,EAAMG,aACpBiB,OAlBO,SAACd,GACZW,EAAS,CACLf,KAAM,SACNK,QAASD,KAgBTe,IAbI,SAACC,GACTL,EAAS,CACLf,KAAM,MACNK,QAASe,OAYRR,ICNES,MA5Bf,WACI,IACOpB,EADOqB,qBAAWb,GAClBR,aAFQ,EAKOsB,mBAAS,GALhB,mBAKRC,EALQ,KAKHC,EALG,KAoBf,OAdAC,qBAAU,WAGND,EAAOxB,EAAa0B,QAAO,SAACC,EAAKC,GAC7B,OAAQD,EAAMC,EAAKrB,SACpB,MAIJ,CAACP,IAMA,yBAAK6B,UAAU,WACX,4CACA,gCAAMN,KCNHO,MApBf,YAAsD,IAA5BC,EAA2B,EAA3BA,KAAMxB,EAAqB,EAArBA,OAAQU,EAAa,EAAbA,OAAQd,EAAK,EAALA,GAC5C,OACI,yBAAK0B,UAAU,oBACX,yBACIA,UAAU,aACVG,QAAU,WACNf,EAAOd,KAEd,oCACD,yBAAK8B,MAAM,YACR,8BAAOF,IAGV,6BACI,8BAAOxB,MCwBR2B,MAnCf,WAEI,IAAMrC,EAAQwB,qBAAWb,GAClBR,EAAwBH,EAAxBG,aAAciB,EAAUpB,EAAVoB,OAHN,EAMiBK,qBANjB,mBAMRa,EANQ,KAMEC,EANF,KAwBf,OAjBAX,qBAAU,WACNW,EACIpC,EAAaqC,KAAK,SAAAnC,GACd,OACI,kBAAC,EAAD,CACI6B,KAAM7B,EAAKI,KACXC,OAAQL,EAAKK,OACb+B,IAAKpC,EAAKC,GACVA,GAAID,EAAKC,GACTc,OAAQA,UAMzB,CAACjB,EAAciB,IAGd,yBACIY,UAAU,WAGV,uCACCM,ICoDEI,MApFf,WAEI,IACQrB,EADMG,qBAAWb,GACjBU,IAHc,EAMEI,mBAAS,CAC7BhB,KAAK,GACLC,OAAQ,IARU,mBAMfiC,EANe,KAMTC,EANS,KAYtB,OACI,yBAAKZ,UAAU,mBACf,0BACI1B,GAAG,OACHuC,SAAU,SAACC,GACPA,EAAEC,iBACCJ,EAAKlC,KAAKuC,OAAS,GAAqB,IAAhBL,EAAKjC,QAC5BW,EAAI,2BACGsB,GADJ,IAECrC,GAAG2C,KAAKC,MAAsB,KAAhBD,KAAKE,aAEvBP,EAAQ,2BACDD,GADA,IAEHlC,KAAM,GACNC,OAAO,MAIX0C,MAAM,iCAMd,yBAAKpB,UAAU,gBACX,2BAAOqB,IAAI,QAAX,QACA,2BACInD,KAAK,OACLI,GAAG,OACHgD,YAAY,gBACZC,SAAU,SAACT,GACP,OAAOF,EAAQ,2BACRD,GADO,IAEVlC,KAAMqC,EAAEU,OAAOrC,UAIvBA,MAAOwB,EAAKlC,QAGpB,yBAAKuB,UAAU,gBACX,2BAAOqB,IAAI,UAAX,UACY,6BADZ,2CAIA,2BACInD,KAAK,SACLI,GAAG,SACHgD,YAAY,kBACZC,SAAU,SAACT,GAEP,OAAOF,EAAQ,2BACRD,GADO,IAEVjC,OAAQ+C,SAASX,EAAEU,OAAOrC,WAIlCA,MAAOwB,EAAKjC,UAGpB,4BACIsB,UAAU,MACV0B,UAAU,GAFd,sBCjCGC,MAxCf,WAGI,IACOxD,EADOqB,qBAAWb,GAClBR,aAJO,EAMcsB,mBAAS,GANvB,mBAMPmC,EANO,KAMCC,EAND,OAOcpC,mBAAS,GAPvB,mBAOPqC,EAPO,KAOCC,EAPD,KA0Bd,OAlBAnC,qBAAU,WACNiC,EAAW1D,EAAa0B,QAAO,SAACC,EAAKC,GAIjC,OAHIA,EAAKrB,QAAU,IACfoB,GAAaC,EAAKrB,QAEfoB,IAER,IACHiC,EAAW5D,EAAa0B,QAAO,SAACC,EAAKC,GAIjC,OAHIA,EAAKrB,OAAS,IACdoB,GAAaC,EAAKrB,QAEfoB,IAER,MAGJ,CAAC3B,IAEA,yBAAK6B,UAAU,oBACX,yBAAKA,UAAU,UACX,4BAAI,yCACJ,4BAAI,kCAAQ4B,EAAOI,QAAQ,MAE/B,yBAAKhC,UAAU,WACX,4BAAI,0CACJ,4BAAI,oCAAkB,EAAT8B,GAAYE,QAAQ,QCdlCC,MAdf,WAEE,OACE,kBAAC,EAAD,CAAejC,UAAU,OACvB,wBAAIA,UAAU,SAAQ,kDACtB,kBAAC,EAAD,MACA,kBAAC,EAAD,MACA,kBAAC,EAAD,MACA,kBAAC,EAAD,QCVNkC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,U","file":"static/js/main.9eeea5eb.chunk.js","sourcesContent":["export default  (state, action) => {\n\n    \n\n\n    switch (action.type) {\n        case \"REMOVE\":\n            return {\n                ...state,\n                transactions: state.transactions.filter( (tran) =>{\n                    return tran.id !== action.payload\n                })\n            }\n           \n        case \"ADD\":\n            return {\n                ...state,\n                transactions: [\n                    ...state.transactions,\n                    action.payload\n                ]\n                   \n\n                \n            }\n        default:\n            return state;\n          \n    }\n}\n\n","import React, { useReducer, createContext} from \"react\";\nimport  AppReducer  from \"./AppReducer\";\n\nconst initialState = {\n    transactions : [\n        { id: 1, text: 'Flower', amount: -20 },\n        { id: 2, text: 'Salary', amount: 300 },\n        { id: 3, text: 'Book', amount: -10 },\n        { id: 4, text: 'Camera', amount: 150 }\n    ],\n\n}\n\nexport const GlobalContext = createContext();\n\nexport const GlobalProvide = ({children}) => {\n    const [state, dispatch] = useReducer(AppReducer, initialState);\n    \n    const remove = (id) => {\n        dispatch({\n            type: \"REMOVE\",\n            payload: id\n        })\n    }\n    const add = (data) => {\n        dispatch({\n            type: \"ADD\",\n            payload: data\n        })\n    }\n   \n\n    \n    return (\n        <GlobalContext.Provider value={{\n            transactions: state.transactions,\n            remove,\n            add\n        }}>\n            {children}\n        </GlobalContext.Provider>\n    )\n\n\n}","import React, { useEffect , useState, useContext } from 'react'\r\nimport { GlobalContext } from \"../context/GlobalState\";\r\n\r\n\r\n\r\nfunction Balance() {\r\n    const state = useContext(GlobalContext);\r\n    const {transactions} = state;\r\n\r\n    \r\n    const [sum, setSum] = useState(0)    \r\n    useEffect(() => {\r\n       \r\n        \r\n        setSum(transactions.reduce((acc, curr) => {\r\n            return  acc + curr.amount;        \r\n        }, 0))\r\n\r\n        \r\n       \r\n    }, [transactions])\r\n\r\n\r\n \r\n\r\n    return (\r\n        <div className='balance'>\r\n            <h4>YOUR BALANCE</h4>\r\n            <h2>${sum}</h2>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Balance\r\n","import React from 'react'\r\n\r\nfunction TransactionItem({name, amount, remove, id}) {\r\n    return (\r\n        <div className=\"transaction_item\">\r\n            <div\r\n                className='removeNode'\r\n                onClick={ () =>{\r\n                    remove(id)\r\n                }}\r\n            ><span>X</span></div>\r\n            <div class=\"itemName\">\r\n               <span>{name}</span>\r\n            </div>\r\n            \r\n            <div>\r\n                <span>{amount}</span>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default TransactionItem\r\n","import React,  { useEffect, useState, useContext} from 'react'\r\nimport TransactionItem from \"./TransactionItem\";\r\nimport { GlobalContext } from \"../context/GlobalState\";\r\n\r\n\r\nfunction History() {\r\n\r\n    const state = useContext(GlobalContext);\r\n    const {transactions, remove} = state;\r\n\r\n \r\n    const [listItem, setListItem] = useState()\r\n    useEffect(() => {\r\n        setListItem(\r\n            transactions.map( tran =>{\r\n                return (\r\n                    <TransactionItem \r\n                        name={tran.text}\r\n                        amount={tran.amount} \r\n                        key={tran.id}\r\n                        id={tran.id}\r\n                        remove={remove}\r\n                     />\r\n                )\r\n            })\r\n        )\r\n       \r\n    }, [transactions, remove])\r\n\r\n    return (\r\n        <div \r\n            className=\"history\"\r\n           \r\n        >\r\n            <h2>History</h2>\r\n            {listItem}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default History\r\n","import React, { useState ,useContext } from 'react'\r\nimport { GlobalContext } from \"../context/GlobalState\";\r\n\r\nfunction AddTransaction() {\r\n\r\n    const state = useContext(GlobalContext);\r\n    const { add } = state;\r\n\r\n\r\n    const [info, setInfo] = useState({\r\n        text:\"\",\r\n        amount: 0\r\n    });\r\n\r\n\r\n    return (\r\n        <div className=\"add_transaction\">\r\n        <form \r\n            id=\"form\"\r\n            onSubmit={(e) =>{\r\n                e.preventDefault();\r\n                if(info.text.length > 0 && info.amount !== 0){\r\n                    add({\r\n                        ...info,\r\n                        id:Math.floor(Math.random() * 10000000000)\r\n                    })\r\n                    setInfo({\r\n                        ...info,\r\n                        text: \"\",\r\n                        amount:0\r\n    \r\n                    })\r\n                }else{\r\n                    alert(\"text and amount is required\")\r\n                }\r\n               \r\n\r\n            }}\r\n        >\r\n            <div className=\"form-control\">\r\n                <label for=\"text\">Text</label>\r\n                <input \r\n                    type=\"text\" \r\n                    id=\"text\" \r\n                    placeholder=\"Enter text...\"\r\n                    onChange={(e) =>{\r\n                        return setInfo({\r\n                            ...info,\r\n                            text: e.target.value\r\n\r\n                        })\r\n                    }} \r\n                    value={info.text}\r\n                />\r\n            </div>\r\n            <div className=\"form-control\">\r\n                <label for=\"amount\"\r\n                    >Amount <br />\r\n                    (negative - expense, positive - income)\r\n                </label>\r\n                <input \r\n                    type=\"number\" \r\n                    id=\"amount\" \r\n                    placeholder=\"Enter amount...\" \r\n                    onChange={(e) =>{\r\n                       \r\n                        return setInfo({\r\n                            ...info,\r\n                            amount: parseInt(e.target.value)\r\n\r\n                        })\r\n                    }}\r\n                    value={info.amount}\r\n                />\r\n            </div>\r\n            <button \r\n                className=\"btn\"\r\n                disabled={false}\r\n            >\r\n                Add transaction\r\n            </button>\r\n        </form>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default AddTransaction\r\n","import React, { useState, useEffect, useContext } from 'react'\r\nimport { GlobalContext } from \"../context/GlobalState\";\r\nfunction Detail() {\r\n\r\n\r\n    const state = useContext(GlobalContext);\r\n    const {transactions} = state;\r\n   \r\n    const [sumPos, setSumPos] = useState(0);\r\n    const [sumNeg, setSumNeg] = useState(0)   \r\n    useEffect(() => {   \r\n        setSumPos( transactions.reduce((acc, curr) => {\r\n            if (curr.amount >= 0) {\r\n                acc =  acc + curr.amount;     \r\n            }\r\n            return acc;\r\n             \r\n        }, 0))\r\n        setSumNeg( transactions.reduce((acc, curr) => {\r\n            if (curr.amount < 0) {\r\n                acc =  acc + curr.amount;     \r\n            }\r\n            return acc;\r\n             \r\n        }, 0))\r\n        \r\n\r\n    }, [transactions])\r\n    return (\r\n        <div className=\"in_exp_container\">\r\n            <div className=\"income\">\r\n                <h3><span>INCOME</span></h3>\r\n                <h3><span>${sumPos.toFixed(2) }</span></h3>\r\n            </div>\r\n            <div className=\"expense\">\r\n                <h3><span>EXPENSE</span></h3>\r\n                <h3><span>${(sumNeg* -1).toFixed(2) }</span></h3>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Detail\r\n","import React from 'react';\nimport './App.css';\nimport Balance  from \"./components/Balance\";\nimport History from \"./components/History\";\nimport AddTransaction from \"./components/AddTransaction\";\nimport Detail from \"./components/Detail\";\nimport { GlobalProvide } from './context/GlobalState';\n\nfunction App() {\n  \n  return (\n    <GlobalProvide className=\"App\">\n      <h2 className='title'><span>Expense Tracker</span></h2>\n      <Balance />\n      <Detail />\n      <History/>\n      <AddTransaction />\n    \n    </GlobalProvide>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n"],"sourceRoot":""}